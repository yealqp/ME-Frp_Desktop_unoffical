name: Build Linux Installer

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    environment: coskey
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
        
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cos-python-sdk-v5
        
    - name: Install frontend dependencies
      run: npm install
      
    - name: Build Tauri application
      run: npm run tauri build
      
    - name: Get version from package.json
      id: version
      run: |
        version=$(cat package.json | jq -r '.version')
        echo "version=$version" >> $GITHUB_OUTPUT
        
    - name: Upload DEB to COS
      run: |
        debFile=$(find src-tauri/target/release/bundle/deb -name "*.deb" | head -1)
        if [ -f "$debFile" ]; then
          python scripts/upload_to_cos.py "$debFile" "v${{ steps.version.outputs.version }}/ME-Frp-desktop-${{ steps.version.outputs.version }}-amd64.deb" --bucket "${{ secrets.BUCKET }}" --region "${{ secrets.REGION }}" --secret-id "${{ secrets.KEYID }}" --secret-key "${{ secrets.KEY }}" --also-latest
        fi
        
    - name: Upload AppImage to COS
      run: |
        appImageFile=$(find src-tauri/target/release/bundle/appimage -name "*.AppImage" | head -1)
        if [ -f "$appImageFile" ]; then
          python scripts/upload_to_cos.py "$appImageFile" "v${{ steps.version.outputs.version }}/ME-Frp-desktop-${{ steps.version.outputs.version }}-x86_64.AppImage" --bucket "${{ secrets.BUCKET }}" --region "${{ secrets.REGION }}" --secret-id "${{ secrets.KEYID }}" --secret-key "${{ secrets.KEY }}" --also-latest
        fi
        
    - name: Upload DEB installer
      uses: actions/upload-artifact@v4
      with:
        name: me-frp-desktop-deb
        path: src-tauri/target/release/bundle/deb/*.deb
        retention-days: 30
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: me-frp-desktop-appimage
        path: src-tauri/target/release/bundle/appimage/*.AppImage
        retention-days: 30