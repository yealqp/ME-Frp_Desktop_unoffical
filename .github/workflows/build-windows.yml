name: Build Windows Installer

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    environment: coskey
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cos-python-sdk-v5
        
    - name: Install frontend dependencies
      run: npm install
      
    - name: Build Tauri application
      run: npm run tauri build
      
    - name: Get version from package.json
      id: version
      run: |
        $version = (Get-Content package.json | ConvertFrom-Json).version
        echo "version=$version" >> $env:GITHUB_OUTPUT
        
    - name: Upload MSI to COS
      run: |
        $msiFile = Get-ChildItem "src-tauri/target/release/bundle/msi/*.msi" | Select-Object -First 1
        if ($msiFile) {
          python scripts/upload_to_cos.py "$($msiFile.FullName)" "v${{ steps.version.outputs.version }}/me-frp-desktop-${{ steps.version.outputs.version }}-x64.msi" --bucket "${{ secrets.BUCKET }}" --region "${{ secrets.REGION }}" --secret-id "${{ secrets.KEYID }}" --secret-key "${{ secrets.KEY }}" --also-latest
        }
        
    - name: Upload NSIS to COS
      run: |
        $nsisFile = Get-ChildItem "src-tauri/target/release/bundle/nsis/*.exe" | Select-Object -First 1
        if ($nsisFile) {
          python scripts/upload_to_cos.py "$($nsisFile.FullName)" "v${{ steps.version.outputs.version }}/me-frp-desktop-${{ steps.version.outputs.version }}-x64-setup.exe" --bucket "${{ secrets.BUCKET }}" --region "${{ secrets.REGION }}" --secret-id "${{ secrets.KEYID }}" --secret-key "${{ secrets.KEY }}" --also-latest
        }
        
    - name: Upload MSI installer
      uses: actions/upload-artifact@v4
      with:
        name: me-frp-desktop-msi
        path: src-tauri/target/release/bundle/msi/*.msi
        retention-days: 30
        
    - name: Upload NSIS installer
      uses: actions/upload-artifact@v4
      with:
        name: me-frp-desktop-nsis
        path: src-tauri/target/release/bundle/nsis/*.exe
        retention-days: 30